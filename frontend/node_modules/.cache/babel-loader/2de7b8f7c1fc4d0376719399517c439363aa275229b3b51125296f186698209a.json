{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from '../../services/authService';\n\n// Async thunks\nexport const loginUser = createAsyncThunk('auth/login', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.login(credentials);\n    localStorage.setItem('accessToken', response.access_token);\n    localStorage.setItem('refreshToken', response.refresh_token);\n    return response;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed');\n  }\n});\nexport const logoutUser = createAsyncThunk('auth/logout', async (_, {\n  dispatch\n}) => {\n  localStorage.removeItem('accessToken');\n  localStorage.removeItem('refreshToken');\n  return null;\n});\nexport const refreshToken = createAsyncThunk('auth/refresh', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.refreshToken();\n    localStorage.setItem('accessToken', response.access_token);\n    return response;\n  } catch (error) {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    return rejectWithValue('Token refresh failed');\n  }\n});\nconst initialState = {\n  user: null,\n  isAuthenticated: !!localStorage.getItem('accessToken'),\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.isAuthenticated = true;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.error = null;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = false;\n      state.user = null;\n      state.error = action.payload;\n    })\n    // Logout\n    .addCase(logoutUser.fulfilled, state => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.error = null;\n    })\n    // Refresh token\n    .addCase(refreshToken.fulfilled, (state, action) => {\n      state.isAuthenticated = true;\n    }).addCase(refreshToken.rejected, state => {\n      state.isAuthenticated = false;\n      state.user = null;\n    });\n  }\n});\nexport const {\n  clearError,\n  setUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","loginUser","credentials","rejectWithValue","response","login","localStorage","setItem","access_token","refresh_token","error","_error$response","_error$response$data","data","logoutUser","_","dispatch","removeItem","refreshToken","initialState","user","isAuthenticated","getItem","loading","authSlice","name","reducers","clearError","state","setUser","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/akhee/Desktop/lms-project/frontend/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport authService from '../../services/authService';\r\n\r\n// Async thunks\r\nexport const loginUser = createAsyncThunk(\r\n  'auth/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.login(credentials);\r\n      localStorage.setItem('accessToken', response.access_token);\r\n      localStorage.setItem('refreshToken', response.refresh_token);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.error || 'Login failed');\r\n    }\r\n  }\r\n);\r\n\r\nexport const logoutUser = createAsyncThunk(\r\n  'auth/logout',\r\n  async (_, { dispatch }) => {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('refreshToken');\r\n    return null;\r\n  }\r\n);\r\n\r\nexport const refreshToken = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.refreshToken();\r\n      localStorage.setItem('accessToken', response.access_token);\r\n      return response;\r\n    } catch (error) {\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('refreshToken');\r\n      return rejectWithValue('Token refresh failed');\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  user: null,\r\n  isAuthenticated: !!localStorage.getItem('accessToken'),\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    setUser: (state, action) => {\r\n      state.user = action.payload;\r\n      state.isAuthenticated = true;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Login\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload.user;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = false;\r\n        state.user = null;\r\n        state.error = action.payload;\r\n      })\r\n      // Logout\r\n      .addCase(logoutUser.fulfilled, (state) => {\r\n        state.isAuthenticated = false;\r\n        state.user = null;\r\n        state.error = null;\r\n      })\r\n      // Refresh token\r\n      .addCase(refreshToken.fulfilled, (state, action) => {\r\n        state.isAuthenticated = true;\r\n      })\r\n      .addCase(refreshToken.rejected, (state) => {\r\n        state.isAuthenticated = false;\r\n        state.user = null;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearError, setUser } = authSlice.actions;\r\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}