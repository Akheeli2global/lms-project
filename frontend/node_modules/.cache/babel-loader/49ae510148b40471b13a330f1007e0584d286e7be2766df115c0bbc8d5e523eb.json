{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  sidebarOpen: true,\n  theme: 'light',\n  notifications: [],\n  loading: false\n};\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    toggleSidebar: state => {\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n    setSidebarOpen: (state, action) => {\n      state.sidebarOpen = action.payload;\n    },\n    toggleTheme: state => {\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\n    },\n    addNotification: (state, action) => {\n      state.notifications.push({\n        id: Date.now(),\n        ...action.payload\n      });\n    },\n    removeNotification: (state, action) => {\n      state.notifications = state.notifications.filter(notification => notification.id !== action.payload);\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    }\n  }\n});\nexport const {\n  toggleSidebar,\n  setSidebarOpen,\n  toggleTheme,\n  addNotification,\n  removeNotification,\n  setLoading\n} = uiSlice.actions;\nexport default uiSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","sidebarOpen","theme","notifications","loading","uiSlice","name","reducers","toggleSidebar","state","setSidebarOpen","action","payload","toggleTheme","addNotification","push","id","Date","now","removeNotification","filter","notification","setLoading","actions","reducer"],"sources":["C:/Users/akhee/Desktop/lms-project/frontend/src/store/slices/uiSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  sidebarOpen: true,\r\n  theme: 'light',\r\n  notifications: [],\r\n  loading: false,\r\n};\r\n\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState,\r\n  reducers: {\r\n    toggleSidebar: (state) => {\r\n      state.sidebarOpen = !state.sidebarOpen;\r\n    },\r\n    setSidebarOpen: (state, action) => {\r\n      state.sidebarOpen = action.payload;\r\n    },\r\n    toggleTheme: (state) => {\r\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\r\n    },\r\n    addNotification: (state, action) => {\r\n      state.notifications.push({\r\n        id: Date.now(),\r\n        ...action.payload,\r\n      });\r\n    },\r\n    removeNotification: (state, action) => {\r\n      state.notifications = state.notifications.filter(\r\n        (notification) => notification.id !== action.payload\r\n      );\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  toggleSidebar,\r\n  setSidebarOpen,\r\n  toggleTheme,\r\n  addNotification,\r\n  removeNotification,\r\n  setLoading,\r\n} = uiSlice.actions;\r\n\r\nexport default uiSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,IAAI;EACjBC,KAAK,EAAE,OAAO;EACdC,aAAa,EAAE,EAAE;EACjBC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,OAAO,GAAGN,WAAW,CAAC;EAC1BO,IAAI,EAAE,IAAI;EACVN,YAAY;EACZO,QAAQ,EAAE;IACRC,aAAa,EAAGC,KAAK,IAAK;MACxBA,KAAK,CAACR,WAAW,GAAG,CAACQ,KAAK,CAACR,WAAW;IACxC,CAAC;IACDS,cAAc,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjCF,KAAK,CAACR,WAAW,GAAGU,MAAM,CAACC,OAAO;IACpC,CAAC;IACDC,WAAW,EAAGJ,KAAK,IAAK;MACtBA,KAAK,CAACP,KAAK,GAAGO,KAAK,CAACP,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IAC1D,CAAC;IACDY,eAAe,EAAEA,CAACL,KAAK,EAAEE,MAAM,KAAK;MAClCF,KAAK,CAACN,aAAa,CAACY,IAAI,CAAC;QACvBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACd,GAAGP,MAAM,CAACC;MACZ,CAAC,CAAC;IACJ,CAAC;IACDO,kBAAkB,EAAEA,CAACV,KAAK,EAAEE,MAAM,KAAK;MACrCF,KAAK,CAACN,aAAa,GAAGM,KAAK,CAACN,aAAa,CAACiB,MAAM,CAC7CC,YAAY,IAAKA,YAAY,CAACL,EAAE,KAAKL,MAAM,CAACC,OAC/C,CAAC;IACH,CAAC;IACDU,UAAU,EAAEA,CAACb,KAAK,EAAEE,MAAM,KAAK;MAC7BF,KAAK,CAACL,OAAO,GAAGO,MAAM,CAACC,OAAO;IAChC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXJ,aAAa;EACbE,cAAc;EACdG,WAAW;EACXC,eAAe;EACfK,kBAAkB;EAClBG;AACF,CAAC,GAAGjB,OAAO,CAACkB,OAAO;AAEnB,eAAelB,OAAO,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}