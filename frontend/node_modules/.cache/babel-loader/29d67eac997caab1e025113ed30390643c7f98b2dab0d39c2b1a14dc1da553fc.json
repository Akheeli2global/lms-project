{"ast":null,"code":"// frontend/src/services/userService.js (update)\nimport api from './api';\nconst userService = {\n  getCurrentUser: async () => {\n    // For now, decode user info from token or use a placeholder\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      try {\n        // Decode JWT payload (simplified)\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        return {\n          id: payload.sub,\n          full_name: payload.full_name || 'User',\n          role: payload.role || 'student',\n          email: payload.email || 'user@example.com'\n        };\n      } catch (error) {\n        console.error('Token decode error:', error);\n      }\n    }\n\n    // Fallback for development\n    return {\n      id: '1',\n      full_name: 'Demo User',\n      role: 'admin',\n      email: 'demo@example.com'\n    };\n  },\n  getUsers: async (params = {}) => {\n    const response = await api.get('/users', {\n      params\n    });\n    return response.data;\n  },\n  createUser: async userData => {\n    const response = await api.post('/users', userData);\n    return response.data;\n  },\n  updateUser: async (userId, userData) => {\n    const response = await api.put(`/users/${userId}`, userData);\n    return response.data;\n  },\n  deleteUser: async userId => {\n    const response = await api.delete(`/users/${userId}`);\n    return response.data;\n  },\n  activateUser: async userId => {\n    const response = await api.post(`/users/${userId}/activate`);\n    return response.data;\n  },\n  deactivateUser: async userId => {\n    const response = await api.post(`/users/${userId}/deactivate`);\n    return response.data;\n  }\n};\nexport default userService;","map":{"version":3,"names":["api","userService","getCurrentUser","token","localStorage","getItem","payload","JSON","parse","atob","split","id","sub","full_name","role","email","error","console","getUsers","params","response","get","data","createUser","userData","post","updateUser","userId","put","deleteUser","delete","activateUser","deactivateUser"],"sources":["C:/Users/akhee/Desktop/lms-project/frontend/src/services/userService.js"],"sourcesContent":["// frontend/src/services/userService.js (update)\r\nimport api from './api';\r\n\r\nconst userService = {\r\n  getCurrentUser: async () => {\r\n    // For now, decode user info from token or use a placeholder\r\n    const token = localStorage.getItem('accessToken');\r\n    if (token) {\r\n      try {\r\n        // Decode JWT payload (simplified)\r\n        const payload = JSON.parse(atob(token.split('.')[1]));\r\n        return {\r\n          id: payload.sub,\r\n          full_name: payload.full_name || 'User',\r\n          role: payload.role || 'student',\r\n          email: payload.email || 'user@example.com'\r\n        };\r\n      } catch (error) {\r\n        console.error('Token decode error:', error);\r\n      }\r\n    }\r\n    \r\n    // Fallback for development\r\n    return {\r\n      id: '1',\r\n      full_name: 'Demo User',\r\n      role: 'admin',\r\n      email: 'demo@example.com'\r\n    };\r\n  },\r\n\r\n  getUsers: async (params = {}) => {\r\n    const response = await api.get('/users', { params });\r\n    return response.data;\r\n  },\r\n\r\n  createUser: async (userData) => {\r\n    const response = await api.post('/users', userData);\r\n    return response.data;\r\n  },\r\n\r\n  updateUser: async (userId, userData) => {\r\n    const response = await api.put(`/users/${userId}`, userData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteUser: async (userId) => {\r\n    const response = await api.delete(`/users/${userId}`);\r\n    return response.data;\r\n  },\r\n\r\n  activateUser: async (userId) => {\r\n    const response = await api.post(`/users/${userId}/activate`);\r\n    return response.data;\r\n  },\r\n\r\n  deactivateUser: async (userId) => {\r\n    const response = await api.post(`/users/${userId}/deactivate`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default userService;"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,WAAW,GAAG;EAClBC,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACjD,IAAIF,KAAK,EAAE;MACT,IAAI;QACF;QACA,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,OAAO;UACLC,EAAE,EAAEL,OAAO,CAACM,GAAG;UACfC,SAAS,EAAEP,OAAO,CAACO,SAAS,IAAI,MAAM;UACtCC,IAAI,EAAER,OAAO,CAACQ,IAAI,IAAI,SAAS;UAC/BC,KAAK,EAAET,OAAO,CAACS,KAAK,IAAI;QAC1B,CAAC;MACH,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF;;IAEA;IACA,OAAO;MACLL,EAAE,EAAE,GAAG;MACPE,SAAS,EAAE,WAAW;MACtBC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EAEDG,QAAQ,EAAE,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;IAC/B,MAAMC,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,GAAG,CAAC,QAAQ,EAAE;MAAEF;IAAO,CAAC,CAAC;IACpD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,UAAU,EAAE,MAAOC,QAAQ,IAAK;IAC9B,MAAMJ,QAAQ,GAAG,MAAMpB,GAAG,CAACyB,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC;IACnD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDI,UAAU,EAAE,MAAAA,CAAOC,MAAM,EAAEH,QAAQ,KAAK;IACtC,MAAMJ,QAAQ,GAAG,MAAMpB,GAAG,CAAC4B,GAAG,CAAC,UAAUD,MAAM,EAAE,EAAEH,QAAQ,CAAC;IAC5D,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDO,UAAU,EAAE,MAAOF,MAAM,IAAK;IAC5B,MAAMP,QAAQ,GAAG,MAAMpB,GAAG,CAAC8B,MAAM,CAAC,UAAUH,MAAM,EAAE,CAAC;IACrD,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDS,YAAY,EAAE,MAAOJ,MAAM,IAAK;IAC9B,MAAMP,QAAQ,GAAG,MAAMpB,GAAG,CAACyB,IAAI,CAAC,UAAUE,MAAM,WAAW,CAAC;IAC5D,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDU,cAAc,EAAE,MAAOL,MAAM,IAAK;IAChC,MAAMP,QAAQ,GAAG,MAAMpB,GAAG,CAACyB,IAAI,CAAC,UAAUE,MAAM,aAAa,CAAC;IAC9D,OAAOP,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAerB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}