{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport classService from '../../services/classService';\nexport const fetchClasses = createAsyncThunk('classes/fetchClasses', async (params = {}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await classService.getClasses(params);\n    return response;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to fetch classes');\n  }\n});\nconst initialState = {\n  classes: [],\n  todayClasses: [],\n  loading: false,\n  error: null,\n  pagination: {\n    total: 0,\n    pages: 0,\n    current_page: 1\n  }\n};\nconst classSlice = createSlice({\n  name: 'classes',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchClasses.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchClasses.fulfilled, (state, action) => {\n      state.loading = false;\n      state.classes = action.payload.classes;\n      state.pagination = {\n        total: action.payload.total,\n        pages: action.payload.pages,\n        current_page: action.payload.current_page\n      };\n    }).addCase(fetchClasses.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  clearError\n} = classSlice.actions;\nexport default classSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","classService","fetchClasses","params","rejectWithValue","response","getClasses","error","_error$response","_error$response$data","data","initialState","classes","todayClasses","loading","pagination","total","pages","current_page","classSlice","name","reducers","clearError","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/akhee/Desktop/lms-project/frontend/src/store/slices/classSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport classService from '../../services/classService';\r\n\r\nexport const fetchClasses = createAsyncThunk(\r\n  'classes/fetchClasses',\r\n  async (params = {}, { rejectWithValue }) => {\r\n    try {\r\n      const response = await classService.getClasses(params);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.error || 'Failed to fetch classes');\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  classes: [],\r\n  todayClasses: [],\r\n  loading: false,\r\n  error: null,\r\n  pagination: {\r\n    total: 0,\r\n    pages: 0,\r\n    current_page: 1,\r\n  },\r\n};\r\n\r\nconst classSlice = createSlice({\r\n  name: 'classes',\r\n  initialState,\r\n  reducers: {\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchClasses.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchClasses.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.classes = action.payload.classes;\r\n        state.pagination = {\r\n          total: action.payload.total,\r\n          pages: action.payload.pages,\r\n          current_page: action.payload.current_page,\r\n        };\r\n      })\r\n      .addCase(fetchClasses.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearError } = classSlice.actions;\r\nexport default classSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,YAAY,MAAM,6BAA6B;AAEtD,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CAC1C,sBAAsB,EACtB,OAAOG,MAAM,GAAG,CAAC,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,YAAY,CAACK,UAAU,CAACH,MAAM,CAAC;IACtD,OAAOE,QAAQ;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,OAAOL,eAAe,CAAC,EAAAI,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBE,IAAI,cAAAD,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,yBAAyB,CAAC;EAClF;AACF,CACF,CAAC;AAED,MAAMI,YAAY,GAAG;EACnBC,OAAO,EAAE,EAAE;EACXC,YAAY,EAAE,EAAE;EAChBC,OAAO,EAAE,KAAK;EACdP,KAAK,EAAE,IAAI;EACXQ,UAAU,EAAE;IACVC,KAAK,EAAE,CAAC;IACRC,KAAK,EAAE,CAAC;IACRC,YAAY,EAAE;EAChB;AACF,CAAC;AAED,MAAMC,UAAU,GAAGpB,WAAW,CAAC;EAC7BqB,IAAI,EAAE,SAAS;EACfT,YAAY;EACZU,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAAChB,KAAK,GAAG,IAAI;IACpB;EACF,CAAC;EACDiB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACxB,YAAY,CAACyB,OAAO,EAAGJ,KAAK,IAAK;MACxCA,KAAK,CAACT,OAAO,GAAG,IAAI;MACpBS,KAAK,CAAChB,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDmB,OAAO,CAACxB,YAAY,CAAC0B,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAClDN,KAAK,CAACT,OAAO,GAAG,KAAK;MACrBS,KAAK,CAACX,OAAO,GAAGiB,MAAM,CAACC,OAAO,CAAClB,OAAO;MACtCW,KAAK,CAACR,UAAU,GAAG;QACjBC,KAAK,EAAEa,MAAM,CAACC,OAAO,CAACd,KAAK;QAC3BC,KAAK,EAAEY,MAAM,CAACC,OAAO,CAACb,KAAK;QAC3BC,YAAY,EAAEW,MAAM,CAACC,OAAO,CAACZ;MAC/B,CAAC;IACH,CAAC,CAAC,CACDQ,OAAO,CAACxB,YAAY,CAAC6B,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MACjDN,KAAK,CAACT,OAAO,GAAG,KAAK;MACrBS,KAAK,CAAChB,KAAK,GAAGsB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER;AAAW,CAAC,GAAGH,UAAU,CAACa,OAAO;AAChD,eAAeb,UAAU,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}